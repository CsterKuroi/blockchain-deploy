# control the function open or close
[on-off]
# if on, update the apt sources
apt-sources = on

# if on, update the third apt sources, now include rethinkdb, collectd
third-apt-sources = on

# if on, update the pip sources
pip-sources = on

# if on, execute the apt-get update
apt-pip-update = on

# if on, use ntp sync the date time
zone-datetime = on

# localdb is open or close, now is remain
local-db = off

# if on, will update the nodes hostname, accoring the section [node-host]
update-node-host = on

# if on, will install the base software for project use
install-base-software = on

# apt sources related attr
[apt-sources]
codename = trusty
source_filename = trusty-sources.list
bak_file = true
bak_filename = sources.list.bak

# third apt sources related attr, now remain
[third-apt-sources]


# pip sources related attr
[pip-sources]
pip_filename = pip.conf
bak_file = true
bak_filename = pip.conf.bak

# origin account with sudo
[node-info-origin]
# old user info, if with two password will update current password to the second if execute the update password

# examples:
# node1 = username1@host1:port old_pwd
# node2 = username2@host2:port old_pwd new_pwd




# You will create the user for remote nodes, use to run the unichain or others
[node-info-new-user]
# new user info, if with two password will update current password to the second if execute the update password
# according to the node-info-origin node-key generate the new users

# examples:
# node1 = new_user1@host1:port old_pwd
# node2 = new_user2@host2:port old_pwd new_pwd





# the hostname you want to rename to!
[node-host]
# node1 according [node-info-origin] node1

# examples:
# node1 = new_hostname1
# node2 = new_hostname2


